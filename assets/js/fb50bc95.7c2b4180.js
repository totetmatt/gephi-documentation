"use strict";(self.webpackChunkgephi_documentation=self.webpackChunkgephi_documentation||[]).push([[6841],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>d});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=o.createContext({}),c=function(e){var t=o.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},s=function(e){var t=c(e.components);return o.createElement(l.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,l=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=c(r),d=n,m=u["".concat(l,".").concat(d)]||u[d]||h[d]||a;return r?o.createElement(m,p(p({ref:t},s),{},{components:r})):o.createElement(m,p({ref:t},s))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,p=new Array(a);p[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:n,p[1]=i;for(var c=2;c<a;c++)p[c]=r[c];return o.createElement.apply(null,p)}return o.createElement.apply(null,r)}u.displayName="MDXCreateElement"},7908:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>p,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var o=r(7462),n=(r(7294),r(3905));const a={id:"how-to-export-graph",title:"How to export graph"},p=void 0,i={unversionedId:"Toolkit/How_to_code_with_the_toolkit/how-to-export-graph",id:"Toolkit/How_to_code_with_the_toolkit/how-to-export-graph",title:"How to export graph",description:"This Toolkit Example is part of the toolkit-demos project, that can be downloaded from the website.",source:"@site/docs/07_Toolkit/How_to_code_with_the_toolkit/How-to-export-graph.md",sourceDirName:"07_Toolkit/How_to_code_with_the_toolkit",slug:"/Toolkit/How_to_code_with_the_toolkit/how-to-export-graph",permalink:"/gephi-documentation/Toolkit/How_to_code_with_the_toolkit/how-to-export-graph",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/07_Toolkit/How_to_code_with_the_toolkit/How-to-export-graph.md",tags:[],version:"current",frontMatter:{id:"how-to-export-graph",title:"How to export graph"},sidebar:"tutorialSidebar",previous:{title:"How to execute a metric over time",permalink:"/gephi-documentation/Toolkit/How_to_code_with_the_toolkit/how-to-execute-a-metric-over-time"},next:{title:"How to export to PDF or SVG",permalink:"/gephi-documentation/Toolkit/How_to_code_with_the_toolkit/how-to-export-to-pdf-or-svg"}},l={},c=[],s={toc:c};function h(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,o.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"This ",(0,n.kt)("a",{parentName:"p",href:"/Toolkit/how-to-build-the-toolkit"},"Toolkit Example")," is part of the toolkit-demos project, that can be downloaded from the ",(0,n.kt)("a",{parentName:"p",href:"http://gephi.org/toolkit"},"website"),"."),(0,n.kt)("hr",null),(0,n.kt)("p",null,"This demo focuses on Import and Export features, showing different IO possibilities. See ",(0,n.kt)("a",{parentName:"p",href:"http://gephi.org/docs/api/org/gephi/io/exporter/api/package-summary.html"},"ExportAPI")," documentation and ",(0,n.kt)("a",{parentName:"p",href:"http://gephi.org/docs/toolkit/org/gephi/io/exporter/spi/Exporter.html"},"list of implemented Exporters"),"."),(0,n.kt)("p",null,"Import can be performed from a file, database or Reader/InputStream. The export can be done to files and Writer/OutputStream. The demo import a file and shows how to configure graph export to use the visible graph instead of the full graph. That is essential to export a graph that has been filtered."),(0,n.kt)("p",null,"The ability to export graph or PDF to Writer or Byte array is showed at the end."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},'//Init a project - and therefore a workspace\nProjectController pc = Lookup.getDefault().lookup(ProjectController.class);\npc.newProject();\nWorkspace workspace = pc.getCurrentWorkspace();\n \n//Get controllers and models\nImportController importController = Lookup.getDefault().lookup(ImportController.class);\n \n//Import file\nContainer container;\ntry {\n    File file = new File(getClass().getResource("/org/gephi/toolkit/demos/resources/lesmiserables.gml").toURI());\n    container = importController.importFile(file);\n    container.getLoader().setEdgeDefault(EdgeDefault.DIRECTED);   //Force DIRECTED\n    container.setAllowAutoNode(false);  //Don\'t create missing nodes\n} catch (Exception ex) {\n    ex.printStackTrace();\n    return;\n}\n \n//Append imported data to GraphAPI\nimportController.process(container, new DefaultProcessor(), workspace);\n \n//Export full graph\nExportController ec = Lookup.getDefault().lookup(ExportController.class);\ntry {\n    ec.exportFile(new File("io_gexf.gexf"));\n} catch (IOException ex) {\n    ex.printStackTrace();\n    return;\n}\n \n//Export only visible graph\nGraphExporter exporter = (GraphExporter) ec.getExporter("gexf");     //Get GEXF exporter\nexporter.setExportVisible(true);  //Only exports the visible (filtered) graph\nexporter.setWorkspace(workspace);\ntry {\n    ec.exportFile(new File("io_gexf.gexf"), exporter);\n} catch (IOException ex) {\n    ex.printStackTrace();\n    return;\n}\n \n//Export to Writer\nExporter exporterGraphML = ec.getExporter("graphml");     //Get GraphML exporter\nexporterGraphML.setWorkspace(workspace);\nStringWriter stringWriter = new StringWriter();\nec.exportWriter(stringWriter, (CharacterExporter) exporterGraphML);\n//System.out.println(stringWriter.toString());   //Uncomment this line\n \n//PDF Exporter config and export to Byte array\nPDFExporter pdfExporter = (PDFExporter) ec.getExporter("pdf");\npdfExporter.setPageSize(PageSize.A0);\npdfExporter.setWorkspace(workspace);\nByteArrayOutputStream baos = new ByteArrayOutputStream();\nec.exportStream(baos, pdfExporter);\nbyte[] pdf = baos.toByteArray();\n')))}h.isMDXComponent=!0}}]);