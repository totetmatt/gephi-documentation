"use strict";(self.webpackChunkgephi_documentation=self.webpackChunkgephi_documentation||[]).push([[8611],{3905:(e,t,o)=>{o.d(t,{Zo:()=>p,kt:()=>d});var r=o(7294);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function l(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function i(e,t){if(null==e)return{};var o,r,n=function(e,t){if(null==e)return{};var o,r,n={},a=Object.keys(e);for(r=0;r<a.length;r++)o=a[r],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)o=a[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var s=r.createContext({}),c=function(e){var t=r.useContext(s),o=t;return e&&(o="function"==typeof e?e(t):l(l({},t),e)),o},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var o=e.components,n=e.mdxType,a=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),g=c(o),d=n,k=g["".concat(s,".").concat(d)]||g[d]||u[d]||a;return o?r.createElement(k,l(l({ref:t},p),{},{components:o})):r.createElement(k,l({ref:t},p))}));function d(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=o.length,l=new Array(a);l[0]=g;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:n,l[1]=i;for(var c=2;c<a;c++)l[c]=o[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,o)}g.displayName="MDXCreateElement"},5881:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var r=o(7462),n=(o(7294),o(3905));const a={id:"how-to-use-ranking",title:"How to use ranking"},l=void 0,i={unversionedId:"Toolkit/How_to_code_with_the_toolkit/how-to-use-ranking",id:"Toolkit/How_to_code_with_the_toolkit/how-to-use-ranking",title:"How to use ranking",description:"This Toolkit Example is part of the toolkit-demos project, that can be downloaded from the website.",source:"@site/docs/07_Toolkit/How_to_code_with_the_toolkit/How-to-use-ranking.md",sourceDirName:"07_Toolkit/How_to_code_with_the_toolkit",slug:"/Toolkit/How_to_code_with_the_toolkit/how-to-use-ranking",permalink:"/gephi-documentation/Toolkit/How_to_code_with_the_toolkit/how-to-use-ranking",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/07_Toolkit/How_to_code_with_the_toolkit/How-to-use-ranking.md",tags:[],version:"current",frontMatter:{id:"how-to-use-ranking",title:"How to use ranking"},sidebar:"tutorialSidebar",previous:{title:"How to use partition",permalink:"/gephi-documentation/Toolkit/How_to_code_with_the_toolkit/how-to-use-partition"},next:{title:"How to build the Toolkit",permalink:"/gephi-documentation/Toolkit/how-to-build-the-toolkit"}},s={},c=[],p={toc:c};function u(e){let{components:t,...o}=e;return(0,n.kt)("wrapper",(0,r.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"This ",(0,n.kt)("a",{parentName:"p",href:"/Toolkit/how-to-build-the-toolkit"},"Toolkit Example")," is part of the toolkit-demos project, that can be downloaded from the ",(0,n.kt)("a",{parentName:"p",href:"http://gephi.org/toolkit"},"website"),"."),(0,n.kt)("hr",null),(0,n.kt)("p",null,"The demo shows how to do ranking, transform colors and size according to degree or attribute values. See also ",(0,n.kt)("a",{parentName:"p",href:"http://gephi.org/docs/api/org/gephi/ranking/api/package-summary.html"},"RankingAPI")," documentation (uncommented).\nThe following ranking are applied to the imported network:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Rank node colors by degree"),(0,n.kt)("li",{parentName:"ul"},"Rank node size by Betweenness Centrality metric"),(0,n.kt)("li",{parentName:"ul"},"Rank label size by Betweenness Centrality")),(0,n.kt)("p",null,"An interpolation can be set to transformers, see ",(0,n.kt)("inlineCode",{parentName:"p"},"setInterpolator()")," on transformers."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},'//Init a project - and therefore a workspace\nProjectController pc = Lookup.getDefault().lookup(ProjectController.class);\npc.newProject();\nWorkspace workspace = pc.getCurrentWorkspace();\n \n//Get controllers and models\nImportController importController = Lookup.getDefault().lookup(ImportController.class);\nGraphModel graphModel = Lookup.getDefault().lookup(GraphController.class).getModel();\nAttributeModel attributeModel = Lookup.getDefault().lookup(AttributeController.class).getModel();\n \n//Import file\nContainer container;\ntry {\n    File file = new File(getClass().getResource("/org/gephi/toolkit/demos/resources/lesmiserables.gml").toURI());\n    container = importController.importFile(file);\n    container.getLoader().setEdgeDefault(EdgeDefault.DIRECTED);   //Force DIRECTED\n} catch (Exception ex) {\n    ex.printStackTrace();\n    return;\n}\n \n//Append imported data to GraphAPI\nimportController.process(container, new DefaultProcessor(), workspace);\n \n//See if graph is well imported\nDirectedGraph graph = graphModel.getDirectedGraph();\nSystem.out.println("Nodes: " + graph.getNodeCount());\nSystem.out.println("Edges: " + graph.getEdgeCount());\n \n//Rank color by Degree\nRankingController rankingController = Lookup.getDefault().lookup(RankingController.class);\nRanking degreeRanking = rankingController.getModel().getRanking(Ranking.NODE_ELEMENT, Ranking.DEGREE_RANKING);\nAbstractColorTransformer colorTransformer = (AbstractColorTransformer) rankingController.getModel().getTransformer(Ranking.NODE_ELEMENT, Transformer.RENDERABLE_COLOR);\n \ncolorTransformer.setColors(new Color[]{new Color(0xFEF0D9), new Color(0xB30000)});\nrankingController.transform(degreeRanking,colorTransformer);\n \n//Get Centrality\nGraphDistance distance = new GraphDistance();\ndistance.setDirected(true);\ndistance.execute(graphModel, attributeModel);\n \n//Rank size by centrality\nAttributeColumn centralityColumn = attributeModel.getNodeTable().getColumn(GraphDistance.BETWEENNESS);\nRanking centralityRanking = rankingController.getModel().getRanking(Ranking.NODE_ELEMENT, centralityColumn.getId());\nAbstractSizeTransformer sizeTransformer = (AbstractSizeTransformer) rankingController.getModel().getTransformer(Ranking.NODE_ELEMENT, Transformer.RENDERABLE_SIZE);\nsizeTransformer.setMinSize(3);\nsizeTransformer.setMaxSize(20);\nrankingController.transform(centralityRanking,sizeTransformer);\n \n//Rank label size - set a multiplier size\nRanking centralityRanking2 = rankingController.getModel().getRanking(Ranking.NODE_ELEMENT, centralityColumn.getId());\nAbstractSizeTransformer labelSizeTransformer = (AbstractSizeTransformer) rankingController.getModel().getTransformer(Ranking.NODE_ELEMENT, Transformer.LABEL_SIZE);\nlabelSizeTransformer.setMinSize(1);\nlabelSizeTransformer.setMaxSize(3);\nrankingController.transform(centralityRanking2,labelSizeTransformer);\n')),(0,n.kt)("p",null,"To do a ranking with more than 2 colors you can define positions where the color changes and define the corresponding colors. Note that the values are normalised from 0..1. The following example lets colors change from blue over white over green to red for the intervals from 0.0..0.33..0.66..1.0"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"float[] positions = {0f,0.33f,0.66f,1f};\ncolorTransformer.setColorPositions(positions);\nColor[] colors = new Color[]{new Color(0x0000FF), new Color(0xFFFFFF),new Color(0x00FF00),new Color(0xFF0000)};\ncolorTransformer.setColors(colors);\n")),(0,n.kt)("p",null,"Note that the final label size can also be influenced by the 'Proportional to node size' option. Disable it for having only the ranking output:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"PreviewModel previewModel = Lookup.getDefault().lookup(PreviewController.class).getModel();\npreviewModel.getProperties().putValue(PreviewProperty.SHOW_NODE_LABELS, Boolean.TRUE);\npreviewModel.getProperties().putValue(PreviewProperty.NODE_LABEL_PROPORTIONAL_SIZE, Boolean.FALSE);\n")))}u.isMDXComponent=!0}}]);