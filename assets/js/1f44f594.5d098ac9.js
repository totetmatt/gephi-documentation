"use strict";(self.webpackChunkgephi_documentation=self.webpackChunkgephi_documentation||[]).push([[6377],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>d});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},s=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),m=c(r),d=a,f=m["".concat(p,".").concat(d)]||m[d]||u[d]||o;return r?n.createElement(f,l(l({ref:t},s),{},{components:r})):n.createElement(f,l({ref:t},s))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},7007:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var n=r(7462),a=(r(7294),r(3905));const o={id:"vocabulary",title:"Vocabulary"},l=void 0,i={unversionedId:"Research/vocabulary",id:"Research/vocabulary",title:"Vocabulary",description:"AutoUpdate",source:"@site/docs/05_Research/Vocabulary.md",sourceDirName:"05_Research",slug:"/Research/vocabulary",permalink:"/gephi-documentation/Research/vocabulary",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/05_Research/Vocabulary.md",tags:[],version:"current",frontMatter:{id:"vocabulary",title:"Vocabulary"},sidebar:"tutorialSidebar",previous:{title:"Readers Circle",permalink:"/gephi-documentation/Research/readers-circle"},next:{title:"Software",permalink:"/gephi-documentation/category/software"}},p={},c=[],s={toc:c};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"AutoUpdate"),"\nThe application can update itself."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Attribute"),"\nData associated to a node or an edge. Could be text, numbers, booleans and more."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Clustering"),"\nAlgorithm that group nodes in clusters or communities."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Exporter"),"\nModule that exports in a particular file format."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Generator"),"\nAlgorithm that generates a network."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Graph file"),"\nFile format that describes a graph structure: list of nodes, list of edges and attributes. Example: GEXF."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Importer"),"\nModule that imports a particular file format."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Ranking"),"\nSorting nodes or edges by an attribute's value."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Partition"),"\nVisual clustering. Give colors to categories."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Preview"),"\nDisplay the graph exactly as it is exported."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Project"),"\nA Gephi session, which contains all workspaces and data."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Tool"),"\nWay to interact with the displayed graph."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Vectorial file"),"\nGraphical file format that descibes shapes."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Workspace"),"\nA whole environment for exploring one graph."))}u.isMDXComponent=!0}}]);