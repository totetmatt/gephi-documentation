"use strict";(self.webpackChunkgephi_documentation=self.webpackChunkgephi_documentation||[]).push([[3269],{3905:(t,e,o)=>{o.d(e,{Zo:()=>s,kt:()=>m});var r=o(7294);function n(t,e,o){return e in t?Object.defineProperty(t,e,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[e]=o,t}function a(t,e){var o=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),o.push.apply(o,r)}return o}function l(t){for(var e=1;e<arguments.length;e++){var o=null!=arguments[e]?arguments[e]:{};e%2?a(Object(o),!0).forEach((function(e){n(t,e,o[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(o,e))}))}return t}function i(t,e){if(null==t)return{};var o,r,n=function(t,e){if(null==t)return{};var o,r,n={},a=Object.keys(t);for(r=0;r<a.length;r++)o=a[r],e.indexOf(o)>=0||(n[o]=t[o]);return n}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(r=0;r<a.length;r++)o=a[r],e.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(t,o)&&(n[o]=t[o])}return n}var p=r.createContext({}),u=function(t){var e=r.useContext(p),o=e;return t&&(o="function"==typeof t?t(e):l(l({},e),t)),o},s=function(t){var e=u(t.components);return r.createElement(p.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var o=t.components,n=t.mdxType,a=t.originalType,p=t.parentName,s=i(t,["components","mdxType","originalType","parentName"]),d=u(o),m=n,h=d["".concat(p,".").concat(m)]||d[m]||c[m]||a;return o?r.createElement(h,l(l({ref:e},s),{},{components:o})):r.createElement(h,l({ref:e},s))}));function m(t,e){var o=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var a=o.length,l=new Array(a);l[0]=d;var i={};for(var p in e)hasOwnProperty.call(e,p)&&(i[p]=e[p]);i.originalType=t,i.mdxType="string"==typeof t?t:n,l[1]=i;for(var u=2;u<a;u++)l[u]=o[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,o)}d.displayName="MDXCreateElement"},1473:(t,e,o)=>{o.r(e),o.d(e,{assets:()=>p,contentTitle:()=>l,default:()=>c,frontMatter:()=>a,metadata:()=>i,toc:()=>u});var r=o(7462),n=(o(7294),o(3905));const a={id:"how-to-manipulate-attributes",title:"How to manipulate attributes"},l=void 0,i={unversionedId:"Toolkit/How_to_code_with_the_toolkit/how-to-manipulate-attributes",id:"Toolkit/How_to_code_with_the_toolkit/how-to-manipulate-attributes",title:"How to manipulate attributes",description:"This Toolkit Example is part of the toolkit-demos project, that can be downloaded from the website.",source:"@site/docs/07_Toolkit/How_to_code_with_the_toolkit/How-to-manipulate-attributes.md",sourceDirName:"07_Toolkit/How_to_code_with_the_toolkit",slug:"/Toolkit/How_to_code_with_the_toolkit/how-to-manipulate-attributes",permalink:"/gephi-documentation/Toolkit/How_to_code_with_the_toolkit/how-to-manipulate-attributes",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/07_Toolkit/How_to_code_with_the_toolkit/How-to-manipulate-attributes.md",tags:[],version:"current",frontMatter:{id:"how-to-manipulate-attributes",title:"How to manipulate attributes"},sidebar:"tutorialSidebar",previous:{title:"How to manipulate Graph",permalink:"/gephi-documentation/Toolkit/How_to_code_with_the_toolkit/how-to-manipulate-graph"},next:{title:"How to manipulate project and workspaces",permalink:"/gephi-documentation/Toolkit/How_to_code_with_the_toolkit/how-to-manipulate-project-and-workspaces"}},p={},u=[],s={toc:u};function c(t){let{components:e,...o}=t;return(0,n.kt)("wrapper",(0,r.Z)({},s,o,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"This ",(0,n.kt)("a",{parentName:"p",href:"/Toolkit/how-to-build-the-toolkit"},"Toolkit Example")," is part of the toolkit-demos project, that can be downloaded from the ",(0,n.kt)("a",{parentName:"p",href:"http://gephi.org/toolkit"},"website"),"."),(0,n.kt)("hr",null),(0,n.kt)("p",null,"Shows how to manipulate attributes. Attributes are the data associated to nodes and edges. The role of  ",(0,n.kt)("a",{parentName:"p",href:"http://gephi.org/docs/api/org/gephi/data/attributes/api/package-summary.html"},"AttributeAPI")," is to store the different columns information."),(0,n.kt)("p",null,"The demo shows how to add columns and values to nodes and how to iterate."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},'//Init a project - and therefore a workspace\nProjectController pc = Lookup.getDefault().lookup(ProjectController.class);\npc.newProject();\nWorkspace workspace = pc.getCurrentWorkspace();\n \n//Get controllers and models\nImportController importController = Lookup.getDefault().lookup(ImportController.class);\n \n//Import file\nContainer container;\ntry {\n    File file = new File(getClass().getResource("/org/gephi/toolkit/demos/resources/polblogs.gml").toURI());\n    container = importController.importFile(file);\n    container.getLoader().setEdgeDefault(EdgeDefault.DIRECTED);   //Force DIRECTED\n    container.setAllowAutoNode(false);  //Don\'t create missing nodes\n} catch (Exception ex) {\n    ex.printStackTrace();\n    return;\n}\n \n//Append imported data to GraphAPI\nimportController.process(container, new DefaultProcessor(), workspace);\n \n//List node columns\nAttributeController ac = Lookup.getDefault().lookup(AttributeController.class);\nAttributeModel model = ac.getModel();\nfor (AttributeColumn col : model.getNodeTable().getColumns()) {\n    System.out.println(col);\n}\n \n//Add boolean column\nAttributeColumn testCol = model.getNodeTable().addColumn("test", AttributeType.BOOLEAN);\n \n//Write values to nodes\nGraphModel graphModel = Lookup.getDefault().lookup(GraphController.class).getModel();\nfor (Node n : graphModel.getGraph().getNodes()) {\n    n.getNodeData().getAttributes().setValue(testCol.getIndex(), Boolean.TRUE);\n}\n \n//Iterate values - fastest\nAttributeColumn sourceCol = model.getNodeTable().getColumn("source");\nfor (Node n : graphModel.getGraph().getNodes()) {\n    System.out.println(n.getNodeData().getAttributes().getValue(sourceCol.getIndex()));\n}\n \n//Iterate values - normal\nfor (Node n : graphModel.getGraph().getNodes()) {\n    System.out.println(n.getNodeData().getAttributes().getValue("source"));\n}\n')))}c.isMDXComponent=!0}}]);