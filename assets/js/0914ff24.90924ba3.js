"use strict";(self.webpackChunkgephi_documentation=self.webpackChunkgephi_documentation||[]).push([[1693],{3905:(e,t,o)=>{o.d(t,{Zo:()=>s,kt:()=>w});var r=o(7294);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function p(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function i(e,t){if(null==e)return{};var o,r,n=function(e,t){if(null==e)return{};var o,r,n={},a=Object.keys(e);for(r=0;r<a.length;r++)o=a[r],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)o=a[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var c=r.createContext({}),l=function(e){var t=r.useContext(c),o=t;return e&&(o="function"==typeof e?e(t):p(p({},t),e)),o},s=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var o=e.components,n=e.mdxType,a=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),d=l(o),w=n,k=d["".concat(c,".").concat(w)]||d[w]||u[w]||a;return o?r.createElement(k,p(p({ref:t},s),{},{components:o})):r.createElement(k,p({ref:t},s))}));function w(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=o.length,p=new Array(a);p[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:n,p[1]=i;for(var l=2;l<a;l++)p[l]=o[l];return r.createElement.apply(null,p)}return r.createElement.apply(null,o)}d.displayName="MDXCreateElement"},8641:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>p,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var r=o(7462),n=(o(7294),o(3905));const a={id:"how-to-manipulate-project-and-workspaces",title:"How to manipulate project and workspaces"},p=void 0,i={unversionedId:"Toolkit/How_to_code_with_the_toolkit/how-to-manipulate-project-and-workspaces",id:"Toolkit/How_to_code_with_the_toolkit/how-to-manipulate-project-and-workspaces",title:"How to manipulate project and workspaces",description:"This Toolkit Example is part of the toolkit-demos project, that can be downloaded from the website.",source:"@site/docs/07_Toolkit/How_to_code_with_the_toolkit/How-to-manipulate-project-and-workspaces.md",sourceDirName:"07_Toolkit/How_to_code_with_the_toolkit",slug:"/Toolkit/How_to_code_with_the_toolkit/how-to-manipulate-project-and-workspaces",permalink:"/gephi-documentation/Toolkit/How_to_code_with_the_toolkit/how-to-manipulate-project-and-workspaces",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/07_Toolkit/How_to_code_with_the_toolkit/How-to-manipulate-project-and-workspaces.md",tags:[],version:"current",frontMatter:{id:"how-to-manipulate-project-and-workspaces",title:"How to manipulate project and workspaces"},sidebar:"tutorialSidebar",previous:{title:"How to manipulate attributes",permalink:"/gephi-documentation/Toolkit/How_to_code_with_the_toolkit/how-to-manipulate-attributes"},next:{title:"How to reuse the Preview Applet",permalink:"/gephi-documentation/Toolkit/How_to_code_with_the_toolkit/how-to-reuse-the-preview-applet"}},c={},l=[],s={toc:l};function u(e){let{components:t,...o}=e;return(0,n.kt)("wrapper",(0,r.Z)({},s,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"This ",(0,n.kt)("a",{parentName:"p",href:"/Toolkit/how-to-build-the-toolkit"},"Toolkit Example")," is part of the toolkit-demos project, that can be downloaded from the ",(0,n.kt)("a",{parentName:"p",href:"http://gephi.org/toolkit"},"website"),"."),(0,n.kt)("hr",null),(0,n.kt)("p",null,"Demo about manipulating several workspaces. The aim of this demo is to use two workspaces, layout networks in parallel and finally export the workspaces as PDF files. See ",(0,n.kt)("a",{parentName:"p",href:"http://gephi.org/docs/api/org/gephi/project/api/package-summary.html"},"ProjectAPI")," documentation also."),(0,n.kt)("p",null,"Workspaces are the container for all data and are manipulated from the ",(0,n.kt)("inlineCode",{parentName:"p"},"ProjectController"),". The demo show key aspects:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"How to duplicate a workspace."),(0,n.kt)("li",{parentName:"ul"},"How to set a workspace as the current workspace. This is very useful as many modules just do their job on this current workspace and doesn't allow to specify which workspace to work on from the API. Therefore it is often required to set current workspace, as showed in export here.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},'public void script() {\n    //Init a project - and therefore a workspace\n    ProjectController pc = Lookup.getDefault().lookup(ProjectController.class);\n    pc.newProject();\n    final Workspace workspace1 = pc.getCurrentWorkspace();\n \n    //Generate a new random graph into a container\n    Container container = Lookup.getDefault().lookup(ContainerFactory.class).newContainer();\n    RandomGraph randomGraph = new RandomGraph();\n    randomGraph.setNumberOfNodes(500);\n    randomGraph.setWiringProbability(0.005);\n    randomGraph.generate(container.getLoader());\n \n    //Append container to graph structure\n    ImportController importController = Lookup.getDefault().lookup(ImportController.class);\n    importController.process(container, new DefaultProcessor(), workspace1);\n \n    //Duplicate this workspace\n    final Workspace workspace2 = pc.duplicateWorkspace(workspace1);\n \n    //Create Thread Pool for parallel layout\n    ExecutorService executor = Executors.newFixedThreadPool(2);\n \n    //Run Tasks and wait for termination in the current thread\n    Future<?> f1 = executor.submit(createLayoutRunnable(workspace1));\n    Future<?> f2 = executor.submit(createLayoutRunnable(workspace2));\n    try {\n        f1.get();\n        f2.get();\n    } catch (Exception ex) {\n        Exceptions.printStackTrace(ex);\n    }\n    executor.shutdown();\n \n    //Export\n    ExportController ec = Lookup.getDefault().lookup(ExportController.class);\n    try {\n        pc.openWorkspace(workspace1);\n        ec.exportFile(new File("parallel_worspace1.pdf"));\n        pc.openWorkspace(workspace2);\n        ec.exportFile(new File("parallel_worspace2.pdf"));\n    } catch (IOException ex) {\n        Exceptions.printStackTrace(ex);\n        return;\n    }\n}\n \nprivate Runnable createLayoutRunnable(final Workspace workspace) {\n    return new Runnable() {\n \n        public void run() {\n        GraphModel gm = Lookup.getDefault().lookup(GraphController.class).getModel(workspace);\n        AutoLayout autoLayout = new AutoLayout(10, TimeUnit.SECONDS);\n        autoLayout.setGraphModel(gm);\n        autoLayout.addLayout(new YifanHuLayout(null, new StepDisplacement(1f)), 1f);\n        autoLayout.execute();\n        }\n    };\n}\n')))}u.isMDXComponent=!0}}]);